@inject IHamsterData _db
@inject IBattleData _bd

@if (displayWinnerHamster is null && displayLoserHamster is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="displayed">
        <div class="absoluteResultLeft">
        <h5>@displayWinnerHamster.Name won </h5>
        <img src="/Images/@displayWinnerHamster.ImageName" align="bottom" style="width:300px;height:200px;">
        </div>
        <div class="absoluteResultRight">
        <h5>@displayLoserHamster.Name lost</h5>
        <img src="/Images/@displayLoserHamster.ImageName" align="bottom" style="width:300px;height:200px;">
        </div>
    </div>
}

@code {
    private List<HamsterModel>? hamsters;
    private List<BattleModel>? battles;
    private DisplayHamsterModel? displayWinnerHamster;
    private DisplayHamsterModel? displayLoserHamster;


    protected override async Task OnInitializedAsync()
    {
        hamsters = await _db.GetHamsters();
        battles = await _bd.GetBattles();

        displayWinnerHamster = ModelConverter.ToDisplayHamsterModel(hamsters.Where(h => h.ID == battles.Last().Winner_ID).Single());
        displayLoserHamster = ModelConverter.ToDisplayHamsterModel(hamsters.Where(h => h.ID == battles.Last().Loser_ID).Single());
    }
    /// <summary>
    /// Shows two hamsters from the last battle.
    /// </summary>
}
