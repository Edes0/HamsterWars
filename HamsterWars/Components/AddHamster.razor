@using Application.ProjectAggregate.Events

@inject IHamsterData _db
@inject NavigationManager _nav

<h4>Add New Hamster</h4>
<EditForm Model="@newHamster" OnValidSubmit="@InsertHamster">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <InputText placeholder="Name" id="Name" @bind-Value="@newHamster.Name" />
    <InputNumber placeholder="Age" id="Age" @bind-Value="@newHamster.Age" />
    <InputText placeholder="Favourite food" id="FavouriteFood" @bind-Value="@newHamster.FavouriteFood" />
    <InputText placeholder="Favourite Activiy" id="FavouriteActiviy" @bind-Value="@newHamster.FavouriteActivity" />
    <InputText placeholder="Image Name" id="ImageName" @bind-Value="@newHamster.ImageName" />

    <button type="submit" class="btn btn-primary">Submit</button>
</EditForm>

@code {
    private List<HamsterModel> hamsters;
    private DisplayHamsterModel newHamster = new DisplayHamsterModel();

    protected override async Task OnInitializedAsync()
    {
        hamsters = await _db.GetHamsters();
    }

    private async Task InsertHamster()
    {
        await _db.InsertHamster(ModelConverter.ToHamsterModel(newHamster));

        AddHamsterToHamsterList.AddHamster(ModelConverter.ToHamsterModel(newHamster), hamsters);

        newHamster = new DisplayHamsterModel();

         _nav.NavigateTo(_nav.Uri, forceLoad: true);
    }
}
