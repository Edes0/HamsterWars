@inject IHamsterData _db
@inject IBattleData _bd

<div class="progress my-2 percentageBar">
    <div class="progress-bar" role="progressbar" style="width: @percentage%" aria-valuemin="0" aria-valuemax="100">
        @percentage%
    </div>
</div>


@code {
    private List<HamsterModel>? hamsters;
    private List<BattleModel>? battles;
    private DisplayHamsterModel? winnerHamster;
    private DisplayHamsterModel? loserHamster;
    private int? percentage;

    protected override async Task OnInitializedAsync()
    {
        hamsters = await _db.GetHamsters();
        battles = await _bd.GetBattles();

        winnerHamster = ModelConverter.ToDisplayHamsterModel(hamsters.Where(h => h.ID == battles.Last().Winner_ID).Single());
        loserHamster = ModelConverter.ToDisplayHamsterModel(hamsters.Where(h => h.ID == battles.Last().Loser_ID).Single());

        int winnerWinrate = PercentageCalculator.Calculate(winnerHamster.Wins, winnerHamster.Games);
        int loserWinrate = PercentageCalculator.Calculate(loserHamster.Wins, loserHamster.Games);

        if (winnerWinrate > loserWinrate)
        {
            percentage = OddsCalculator.Calculate(winnerWinrate, loserWinrate);
        }
        else
        {
            percentage = OddsCalculator.Calculate(loserWinrate, winnerWinrate);
            percentage = 100 - percentage;
        }
    }
    /// <summary>
    /// Component that shows how likley the hamster that won was. Calculates with PercentageCalculator.Calculate.
    /// </summary>
}
